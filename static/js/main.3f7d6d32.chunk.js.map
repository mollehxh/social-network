{"version":3,"sources":["store/ducks/auth/types.ts","store/ducks/auth/reducer.ts","store/rootReducer.ts","store/ducks/auth/actions.ts","firebaseConfig.ts","services/api.ts","store/ducks/auth/sagas.ts","store/rootSaga.ts","store/index.ts","routing/routes.ts","components/UI/Button/Button.tsx","components/UI/Input/Input.tsx","components/UI/Divider/Divider.tsx","assets/images/Google.svg","assets/images/GitHub.svg","pages/LoginPage.tsx","pages/RegisterPage.tsx","pages/FeedPage.tsx","pages/MessagesPage.tsx","pages/FriendsPage.tsx","components/UI/Popup/Popup.tsx","components/Header/Header.tsx","components/UI/ButtonGroup/ButtonGroup.tsx","components/UI/Tooltip/Tooltip.tsx","components/Sidebar/Sidebar.tsx","components/Layouts/AppLayout/AppLayout.tsx","components/Layouts/AuthLayout/AuthLayout.tsx","components/AppRouter.tsx","components/FullPageLoader/FullPageLoader.tsx","components/App/App.tsx","index.tsx"],"names":["AuthActionTypes","authReducer","produce","draft","action","type","SET_USER","user","payload","SET_LOADING","isLoading","SET_ERROR","error","rootReducer","combineReducers","auth","setUserAction","setLoadingAction","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","signIn","email","password","a","signInWithEmailAndPassword","signUp","createUserWithEmailAndPassword","signInWorker","signUpWorker","authWatcher","put","call","API","toast","message","collection","doc","uid","set","firstName","secondName","takeLatest","SIGN_IN","SIGN_UP","rootSaga","all","sagaMiddleware","createMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","run","RoutePaths","Button","children","color","fullWidth","href","icon","onClick","to","activeClassName","classNames","className","Input","placeholder","name","onChange","Divider","LoginPage","dispatch","useDispatch","history","useHistory","login","provider","GoogleAuthProvider","signInWithPopup","push","console","log","initialValues","onSubmit","values","handleChange","handleSubmit","value","src","GoogleIcon","alt","GitHubIcon","RegisterPage","confirmPassword","FeedPage","MessagesPage","FriendsPage","publicRoutes","path","LOGIN","Component","exact","REGISTER","privateRoutes","PROFILE","FEED","MESSAGES","FRIENDS","PopupContext","createContext","Popup","placement","useState","isVisible","setIsVisible","wrapperRef","useRef","useEffect","handleOutsideClick","e","current","contains","target","document","addEventListener","removeEventListener","ref","Provider","toggleIsVisible","TargetElement","useContext","Options","Option","Header","location","useLocation","pathname","slice","signOut","ButtonGroup","Tooltip","content","onMouseEnter","onMouseLeave","Sidebar","AppLayout","AuthLayout","AppRouter","useSelector","state","map","FullPageLoader","App","loading","Transition","timeout","in","mountOnEnter","unmountOnExit","onAuthStateChanged","render","getElementById"],"mappings":"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","file":"static/js/main.3f7d6d32.chunk.js","sourcesContent":["import { Action } from 'redux';\r\n\r\nexport enum AuthActionTypes {\r\n  SET_USER = 'SET_USER',\r\n  SIGN_OUT = 'SIGN_OUT',\r\n  SIGN_IN = 'SIGN_IN',\r\n  SIGN_UP = 'SIGN_UP',\r\n  SET_LOADING = 'SET_LOADING',\r\n  SET_ERROR = 'SET_ERROR',\r\n}\r\n\r\nexport interface IUser {\r\n  firstName: string;\r\n  email: string;\r\n  id: string;\r\n  createdAt: any;\r\n}\r\n\r\nexport interface IAuthState {\r\n  user: IUser | null;\r\n  isLoading: boolean;\r\n  error: string;\r\n}\r\n\r\ninterface ISetUserAction extends Action {\r\n  type: string;\r\n  payload: IUser | any;\r\n}\r\n\r\ninterface ISetLoadingAction extends Action {\r\n  type: string;\r\n  payload: boolean;\r\n}\r\n\r\ninterface ISetError extends Action {\r\n  type: string;\r\n  payload: string;\r\n}\r\n\r\nexport type AuthAction = ISetUserAction | ISetLoadingAction | ISetError;\r\n","import produce, { Draft } from 'immer';\r\nimport { AuthAction, AuthActionTypes, IAuthState } from './types';\r\n\r\nconst initialState: IAuthState = {\r\n  user: null,\r\n  isLoading: false,\r\n  error: '',\r\n};\r\n\r\nconst authReducer = produce((draft: Draft<IAuthState>, action: AuthAction) => {\r\n  switch (action.type) {\r\n    case AuthActionTypes.SET_USER:\r\n      draft.user = action.payload;\r\n      break;\r\n    case AuthActionTypes.SET_LOADING:\r\n      draft.isLoading = action.payload;\r\n      break;\r\n    case AuthActionTypes.SET_ERROR:\r\n      draft.error = action.payload;\r\n      break;\r\n  }\r\n}, initialState);\r\n\r\nexport default authReducer;\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './ducks/auth/reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  auth: authReducer,\r\n});\r\n","import { AuthActionTypes } from './types';\r\n\r\nexport const signInAction = (payload: any) => ({\r\n  type: AuthActionTypes.SIGN_IN,\r\n  payload,\r\n});\r\n\r\nexport const signUpAction = (payload: any) => ({\r\n  type: AuthActionTypes.SIGN_UP,\r\n  payload,\r\n});\r\n\r\nexport const setUserAction = (payload: any) => ({\r\n  type: AuthActionTypes.SET_USER,\r\n  payload,\r\n});\r\n\r\nexport const setLoadingAction = (payload: boolean) => ({\r\n  type: AuthActionTypes.SET_LOADING,\r\n  payload,\r\n});\r\n\r\nexport const setErrorAction = (payload: string) => ({\r\n  type: AuthActionTypes.SET_ERROR,\r\n  payload,\r\n});\r\n","import firebase from 'firebase';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n});\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n","import { auth } from 'firebaseConfig';\r\n\r\nexport const signIn = async (email: string, password: string) => {\r\n  const { user } = await auth.signInWithEmailAndPassword(email, password);\r\n  return user;\r\n};\r\n\r\nexport const signUp = async (email: string, password: string) => {\r\n  const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n  return user;\r\n};\r\n","import { call, put, takeLatest } from 'redux-saga/effects';\r\nimport { setErrorAction, setLoadingAction, setUserAction } from './actions';\r\nimport { AuthActionTypes } from './types';\r\nimport * as API from 'services/api';\r\nimport { firestore } from 'firebaseConfig';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction* signInWorker(action: any): Generator {\r\n  try {\r\n    yield put(setLoadingAction(true));\r\n    const user = yield call(\r\n      API.signIn,\r\n      action.payload.email,\r\n      action.payload.password\r\n    );\r\n    yield put(setUserAction(user));\r\n    yield put(setLoadingAction(false));\r\n  } catch (err) {\r\n    yield put(setLoadingAction(false));\r\n    toast.error(err.message);\r\n  }\r\n}\r\n\r\nfunction* signUpWorker(action: any): Generator {\r\n  try {\r\n    yield put(setLoadingAction(true));\r\n    const user: any = yield call(\r\n      API.signUp,\r\n      action.payload.email,\r\n      action.payload.password\r\n    );\r\n    firestore.collection('users').doc(user.uid).set({\r\n      firstName: action.payload.firstName,\r\n      secondName: action.payload.secondName,\r\n    });\r\n    yield put(setUserAction(user));\r\n    yield put(setLoadingAction(false));\r\n  } catch (err) {\r\n    yield put(setLoadingAction(false));\r\n    toast.error(err.message);\r\n  }\r\n}\r\n\r\nexport default function* authWatcher(): Generator {\r\n  yield takeLatest(AuthActionTypes.SIGN_IN, signInWorker);\r\n  yield takeLatest(AuthActionTypes.SIGN_UP, signUpWorker);\r\n}\r\n","import { all } from '@redux-saga/core/effects';\r\nimport authWatcher from './ducks/auth/sagas';\r\n\r\nexport function* rootSaga() {\r\n  yield all([authWatcher()]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createMiddleware from 'redux-saga';\r\nimport { rootReducer } from './rootReducer';\r\nimport { rootSaga } from './rootSaga';\r\n\r\nconst sagaMiddleware = createMiddleware();\r\n\r\nconst composeEnhancers =\r\n  (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\r\n\r\nexport const store = createStore(rootReducer, enhancer);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import React from 'react';\r\nimport LoginPage from 'pages/LoginPage';\r\nimport RegisterPage from 'pages/RegisterPage';\r\nimport FeedPage from 'pages/FeedPage';\r\nimport MessagesPage from 'pages/MessagesPage';\r\nimport FriendsPage from 'pages/FriendsPage';\r\n\r\nexport enum RoutePaths {\r\n  LOGIN = '/login',\r\n  REGISTER = '/register',\r\n  PROFILE = '/profile',\r\n  FEED = '/feed',\r\n  MESSAGES = '/messages',\r\n  FRIENDS = '/friends',\r\n}\r\n\r\nexport interface IRoute {\r\n  path: RoutePaths;\r\n  Component: React.FC;\r\n  exact: boolean;\r\n}\r\n\r\nexport const publicRoutes: IRoute[] = [\r\n  {\r\n    path: RoutePaths.LOGIN,\r\n    Component: LoginPage,\r\n    exact: false,\r\n  },\r\n  {\r\n    path: RoutePaths.REGISTER,\r\n    Component: RegisterPage,\r\n    exact: false,\r\n  },\r\n];\r\n\r\nexport const privateRoutes: IRoute[] = [\r\n  {\r\n    path: RoutePaths.PROFILE,\r\n    Component: FeedPage,\r\n    exact: false,\r\n  },\r\n  {\r\n    path: RoutePaths.FEED,\r\n    Component: FeedPage,\r\n    exact: false,\r\n  },\r\n  {\r\n    path: RoutePaths.MESSAGES,\r\n    Component: MessagesPage,\r\n    exact: false,\r\n  },\r\n  {\r\n    path: RoutePaths.FRIENDS,\r\n    Component: FriendsPage,\r\n    exact: false,\r\n  },\r\n];\r\n","import React, { FC } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport './Button.scss';\r\n\r\ninterface ButtonProps {\r\n  color?: 'primary' | 'secondary' | 'white' | 'default';\r\n  fullWidth?: boolean;\r\n  href?: string;\r\n  icon?: boolean;\r\n  onClick?: () => void;\r\n}\r\n\r\nexport const Button: FC<ButtonProps> = ({\r\n  children,\r\n  color,\r\n  fullWidth,\r\n  href,\r\n  icon,\r\n  onClick,\r\n}) => {\r\n  return href ? (\r\n    <NavLink\r\n      to={href}\r\n      activeClassName={classNames('button button--link button--white')}\r\n      className={classNames('button button--link', {\r\n        'button--icon': icon,\r\n        'button--full-width': fullWidth,\r\n        [`button--${color}`]: color,\r\n      })}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </NavLink>\r\n  ) : (\r\n    <button\r\n      className={classNames('button', {\r\n        'button--icon': icon,\r\n        'button--full-width': fullWidth,\r\n        [`button--${color}`]: color,\r\n      })}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport classNames from 'classnames';\r\nimport './Input.scss';\r\n\r\ninterface InputProps {\r\n  placeholder?: string;\r\n  fullWidth?: boolean;\r\n  type?: 'password';\r\n  name?: string;\r\n  value?: string;\r\n  onChange?: (e: React.ChangeEvent) => void;\r\n}\r\n\r\nexport const Input: FC<InputProps> = ({\r\n  placeholder = '',\r\n  fullWidth,\r\n  type = '',\r\n  name = '',\r\n  onChange = () => {},\r\n}) => {\r\n  return (\r\n    <div\r\n      className={classNames('input-wrapper', {\r\n        'input-wrapper--full-width': fullWidth,\r\n      })}\r\n    >\r\n      <input\r\n        name={name}\r\n        type={type}\r\n        onChange={onChange}\r\n        className={classNames('input-wrapper__input', {\r\n          'input-wrapper__input--full-width': fullWidth,\r\n        })}\r\n        placeholder=' '\r\n      />\r\n      <label className='input-wrapper__label'>{placeholder}</label>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './Divider.scss';\r\n\r\nexport const Divider = () => {\r\n  return <div className='divider'></div>;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Google.89506ad9.svg\";","export default __webpack_public_path__ + \"static/media/GitHub.f635cb74.svg\";","import React from 'react';\r\nimport firebase from 'firebase';\r\nimport { auth } from 'firebaseConfig';\r\nimport { Button } from 'components/UI/Button';\r\nimport { Input } from 'components/UI/Input';\r\nimport { Divider } from 'components/UI/Divider';\r\nimport GoogleIcon from 'assets/images/Google.svg';\r\nimport GitHubIcon from 'assets/images/GitHub.svg';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport { useDispatch } from 'react-redux';\r\nimport { signInAction } from 'store/ducks/auth/actions';\r\n\r\nconst LoginPage = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const login = async () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    const { user }: any = await auth.signInWithPopup(provider);\r\n    history.push('/feed');\r\n    console.log(user);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <Formik\r\n        initialValues={{ email: '', password: '' }}\r\n        onSubmit={(values) => {\r\n          dispatch(signInAction(values));\r\n        }}\r\n      >\r\n        {({ values, handleChange, handleSubmit }) => (\r\n          <form onSubmit={handleSubmit} className='form'>\r\n            <h1 className='form__title'>Sign in</h1>\r\n\r\n            <Input\r\n              fullWidth\r\n              name='email'\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              placeholder='Email'\r\n            />\r\n            <Input\r\n              fullWidth\r\n              name='password'\r\n              value={values.password}\r\n              placeholder='Password'\r\n              onChange={handleChange}\r\n              type='password'\r\n            />\r\n\r\n            <div className='form-group'>\r\n              <Button color='primary'>Sign in</Button>\r\n              <Button href='/register' color='white'>\r\n                Sign up\r\n              </Button>\r\n            </div>\r\n            <Divider />\r\n            <div className='form__other-auth'>\r\n              <img onClick={login} src={GoogleIcon} alt='' />\r\n              <img src={GitHubIcon} alt='' />\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport GoogleIcon from 'assets/images/Google.svg';\r\nimport GitHubIcon from 'assets/images/GitHub.svg';\r\nimport { Button } from 'components/UI/Button';\r\nimport { Divider } from 'components/UI/Divider';\r\nimport { Input } from 'components/UI/Input';\r\nimport { Formik } from 'formik';\r\nimport { useDispatch } from 'react-redux';\r\nimport { signUpAction } from 'store/ducks/auth/actions';\r\n\r\nconst RegisterPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <main>\r\n      <Formik\r\n        initialValues={{\r\n          firstName: '',\r\n          secondName: '',\r\n          email: '',\r\n          password: '',\r\n          confirmPassword: '',\r\n        }}\r\n        onSubmit={(values) => {\r\n          dispatch(signUpAction(values));\r\n        }}\r\n      >\r\n        {({ values, handleChange, handleSubmit }) => (\r\n          <form onSubmit={handleSubmit} className='form'>\r\n            <h1 className='form__title'>Sign up</h1>\r\n            <div className='form-group'>\r\n              <Input\r\n                fullWidth\r\n                placeholder='First name'\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n                name='firstName'\r\n              />\r\n              <Input\r\n                fullWidth\r\n                placeholder='Second name'\r\n                value={values.secondName}\r\n                onChange={handleChange}\r\n                name='secondName'\r\n              />\r\n            </div>\r\n            <Input\r\n              fullWidth\r\n              placeholder='Email'\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              name='email'\r\n            />\r\n            <Input\r\n              type='password'\r\n              fullWidth\r\n              placeholder='Password'\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              name='password'\r\n            />\r\n            <Input\r\n              type='password'\r\n              fullWidth\r\n              placeholder='Confirm password'\r\n              value={values.confirmPassword}\r\n              onChange={handleChange}\r\n              name='confirmPassword'\r\n            />\r\n            <div className='form-group'>\r\n              <Button color='primary'>Sign up</Button>\r\n              <Button href='/login' color='white'>\r\n                Sign in\r\n              </Button>\r\n            </div>\r\n            <Divider />\r\n            <div className='form__other-auth'>\r\n              <img src={GoogleIcon} alt='' />\r\n              <img src={GitHubIcon} alt='' />\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\n\r\nconst FeedPage = () => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default FeedPage;\r\n","import React from 'react';\r\n\r\nconst MessagesPage = () => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default MessagesPage;\r\n","import React from 'react';\r\n\r\nconst FriendsPage = () => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default FriendsPage;\r\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useEffect,\r\n  useState,\r\n  useContext,\r\n  createContext,\r\n} from 'react';\r\nimport './Popup.scss';\r\n\r\ninterface PopupSubComponents {\r\n  TargetElement: React.FC;\r\n  Options: React.FC;\r\n  Option: React.FC<OptionProps>;\r\n}\r\n\r\ninterface OptionProps {\r\n  onClick?: () => void;\r\n}\r\n\r\ninterface PopupProps {\r\n  placement:\r\n    | 'top-start'\r\n    | 'top-end'\r\n    | 'top'\r\n    | 'right-start'\r\n    | 'right-end'\r\n    | 'right'\r\n    | 'bottom-start'\r\n    | 'bottom-end'\r\n    | 'bottom'\r\n    | 'left-start'\r\n    | 'left-end'\r\n    | 'left';\r\n}\r\n\r\nconst PopupContext = createContext<any>(null);\r\n\r\nexport const Popup: FC<PopupProps> & PopupSubComponents = ({\r\n  children,\r\n  placement,\r\n}) => {\r\n  const [isVisible, setIsVisible] = useState<boolean>(false);\r\n  const wrapperRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const handleOutsideClick = (e: any) => {\r\n      if (!wrapperRef.current?.contains(e.target)) {\r\n        setIsVisible(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('click', handleOutsideClick);\r\n    return () => document.removeEventListener('click', handleOutsideClick);\r\n  }, []);\r\n\r\n  const toggleIsVisible = () => {\r\n    setIsVisible(!isVisible);\r\n  };\r\n\r\n  return (\r\n    <div className='popup-wrapper' ref={wrapperRef}>\r\n      <PopupContext.Provider value={{ isVisible, toggleIsVisible, placement }}>\r\n        {children}\r\n      </PopupContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TargetElement: FC = ({ children }) => {\r\n  const { toggleIsVisible } = useContext(PopupContext);\r\n\r\n  return <span onClick={toggleIsVisible}>{children}</span>;\r\n};\r\n\r\nconst Options: FC = ({ children }) => {\r\n  const { isVisible, placement } = useContext(PopupContext);\r\n\r\n  return (\r\n    <>\r\n      {isVisible && <ul className={`popup popup--${placement}`}>{children}</ul>}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Option: FC<OptionProps> = ({ children, onClick }) => {\r\n  const { toggleIsVisible } = useContext(PopupContext);\r\n\r\n  const handleClick = () => {\r\n    onClick?.();\r\n    toggleIsVisible();\r\n  };\r\n\r\n  return (\r\n    <li className='popup__item' onClick={handleClick}>\r\n      {children}\r\n    </li>\r\n  );\r\n};\r\n\r\nPopup.TargetElement = TargetElement;\r\nPopup.Options = Options;\r\nPopup.Option = Option;\r\n","import React from 'react';\r\nimport { Popup } from 'components/UI/Popup';\r\nimport './Header.scss';\r\nimport { auth } from 'firebaseConfig';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport const Header = () => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <header className='header'>\r\n      <h1 className='header__title'>{location.pathname.slice(1)}</h1>\r\n\r\n      <Popup placement='bottom-end'>\r\n        <Popup.TargetElement>\r\n          <div className='header__user'></div>\r\n        </Popup.TargetElement>\r\n        <Popup.Options>\r\n          <Popup.Option onClick={() => auth.signOut()}>Log out</Popup.Option>\r\n        </Popup.Options>\r\n      </Popup>\r\n    </header>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport './ButtonGroup.scss';\r\n\r\nexport const ButtonGroup: FC = ({ children }) => {\r\n  return <div className='button-group'>{children}</div>;\r\n};\r\n","import React, { FC } from 'react';\r\nimport { useState } from 'react';\r\nimport './Tooltip.scss';\r\n\r\ninterface TooltipProps {\r\n  content: string;\r\n  placement: 'top' | 'right' | 'bottom' | 'left';\r\n}\r\n\r\nexport const Tooltip: FC<TooltipProps> = ({ children, content, placement }) => {\r\n  const [isVisible, setIsVisible] = useState<boolean>(false);\r\n\r\n  const show = () => {\r\n    setIsVisible(true);\r\n  };\r\n\r\n  const hide = () => {\r\n    setIsVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div className='tooltip-wrapper' onMouseEnter={show} onMouseLeave={hide}>\r\n      <div className='tooltip-wrapper__target-element'>{children}</div>\r\n      {isVisible && (\r\n        <span className={`tooltip tooltip--${placement}`}>{content}</span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { FaTelegramPlane } from 'react-icons/fa';\r\nimport {\r\n  BiMessageSquareDetail,\r\n  BiGridAlt,\r\n  BiGroup,\r\n  BiCog,\r\n  BiUser,\r\n} from 'react-icons/bi';\r\nimport { Divider } from 'components/UI/Divider';\r\nimport { Button } from 'components/UI/Button';\r\nimport './Sidebar.scss';\r\nimport { ButtonGroup } from 'components/UI/ButtonGroup';\r\nimport { Tooltip } from 'components/UI/Tooltip';\r\n\r\nexport const Sidebar = () => {\r\n  return (\r\n    <div className='sidebar'>\r\n      <div className='sidebar-top'>\r\n        <Button icon color='default' href='/feed'>\r\n          <FaTelegramPlane />\r\n        </Button>\r\n      </div>\r\n\r\n      <Divider />\r\n      <div className='sidebar-middle'>\r\n        <ButtonGroup>\r\n          <Tooltip content='Profile' placement='right'>\r\n            <Button icon href='/profile'>\r\n              <BiUser />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip content='Feed' placement='right'>\r\n            <Button icon href='/feed'>\r\n              <BiGridAlt />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip content='Messages' placement='right'>\r\n            <Button icon href='/messages'>\r\n              <BiMessageSquareDetail />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip content='Friends' placement='right'>\r\n            <Button icon href='/friends'>\r\n              <BiGroup />\r\n            </Button>\r\n          </Tooltip>\r\n        </ButtonGroup>\r\n      </div>\r\n      <Divider />\r\n\r\n      <div className='sidebar-bottom'>\r\n        <Button icon>\r\n          <BiCog />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { Header } from 'components/Header';\r\nimport { Sidebar } from 'components/Sidebar';\r\nimport './AppLayout.scss';\r\n\r\nexport const AppLayout: FC = ({ children }) => {\r\n  return (\r\n    <>\r\n      <Sidebar />\r\n      <Header />\r\n      <main className='app-page'>{children}</main>\r\n    </>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport './AuthLayout.scss';\r\n\r\nexport const AuthLayout: FC = ({ children }) => {\r\n  return <main className='auth-page'>{children}</main>;\r\n};\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport {\r\n  IRoute,\r\n  RoutePaths,\r\n  privateRoutes,\r\n  publicRoutes,\r\n} from '../routing/routes';\r\nimport { AppLayout } from 'components/Layouts/AppLayout';\r\nimport { AuthLayout } from 'components/Layouts/AuthLayout';\r\nimport { RootState } from 'store';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AppRouter = () => {\r\n  const user = useSelector((state: RootState) => state.auth.user);\r\n\r\n  return user ? (\r\n    <Switch>\r\n      {privateRoutes.map(({ path, Component, exact }: IRoute) => (\r\n        <Route path={path} exact={exact} key={path}>\r\n          <AppLayout>\r\n            <Component />\r\n          </AppLayout>\r\n        </Route>\r\n      ))}\r\n      <Redirect to={RoutePaths.FEED} />\r\n    </Switch>\r\n  ) : (\r\n    <Switch>\r\n      {publicRoutes.map(({ path, Component, exact }: IRoute) => (\r\n        <Route path={path} exact={exact} key={path}>\r\n          <AuthLayout>\r\n            <Component />\r\n          </AuthLayout>\r\n        </Route>\r\n      ))}\r\n      <Redirect to={RoutePaths.LOGIN} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import classNames from 'classnames';\r\nimport React, { FC } from 'react';\r\nimport './FullPageLoader.scss';\r\n\r\ninterface FullPageLoaderProps {\r\n  state: string;\r\n}\r\n\r\nexport const FullPageLoader: FC<FullPageLoaderProps> = ({ state }) => {\r\n  return (\r\n    <div className={classNames('loader', { [state]: state })}>\r\n      <div className='lds-ellipsis '>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport AppRouter from 'components/AppRouter';\r\nimport './App.scss';\r\nimport { FullPageLoader } from 'components/FullPageLoader';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from 'store';\r\n\r\nimport { Transition } from 'react-transition-group';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nexport const App = () => {\r\n  const loading = useSelector((state: RootState) => state.auth.isLoading);\r\n\r\n  return (\r\n    <>\r\n      <Transition timeout={250} in={loading} mountOnEnter unmountOnExit>\r\n        {(state) => <FullPageLoader state={state} />}\r\n      </Transition>\r\n      <ToastContainer />\r\n      <AppRouter />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from 'store';\nimport { App } from './components/App';\nimport { auth } from 'firebaseConfig';\nimport { setLoadingAction, setUserAction } from 'store/ducks/auth/actions';\n\nauth.onAuthStateChanged((user) => {\n  store.dispatch(setLoadingAction(true));\n  store.dispatch(setUserAction(user));\n  store.dispatch(setLoadingAction(false));\n  render(\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>,\n    document.getElementById('root')\n  );\n});\n"],"sourceRoot":""}